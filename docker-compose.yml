services:
  postgres:
    image: "pgvector/pgvector:pg13"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./docker/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d fileintel"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6779"

  api:
    build: .
    entrypoint: ["./docker-entrypoint.sh"]
    command: ["uvicorn", "src.document_analyzer.api.main:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "8000:8000"
    volumes:
      - ./src:/home/appuser/app/src
      - ./config:/home/appuser/app/config
      - ./prompts:/home/appuser/app/prompts
      - ./logs:/home/appuser/app/logs
      - ./uploads:/home/appuser/app/uploads
      - ./input:/home/appuser/app/input
      - ./output:/home/appuser/app/output
      - ./migrations:/home/appuser/app/migrations
      - ./alembic.ini:/home/appuser/app/alembic.ini
      - ./scripts:/home/appuser/app/scripts
      - ./tests:/home/appuser/app/tests
      - ./docker-entrypoint.sh:/home/appuser/app/docker-entrypoint.sh
    env_file:
      - .env
    environment:
      - PYTHONPATH=/home/appuser/app/src
      - PYTHONUNBUFFERED=1
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB}
    extra_hosts:
      - "host.docker.internal:host-gateway"

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  worker:
    build: .
    entrypoint: ["./docker-entrypoint.sh"]
    command: ["python", "run_worker.py"]
    volumes:
      - ./src:/home/appuser/app/src
      - ./config:/home/appuser/app/config
      - ./prompts:/home/appuser/app/prompts
      - ./logs:/home/appuser/app/logs
      - ./run_worker.py:/home/appuser/app/run_worker.py
      - ./uploads:/home/appuser/app/uploads
      - ./input:/home/appuser/app/input
      - ./output:/home/appuser/app/output
      - ./docker-entrypoint.sh:/home/appuser/app/docker-entrypoint.sh
    env_file:
      - .env
    environment:
      - PYTHONPATH=/home/appuser/app/src
      - PYTHONUNBUFFERED=1
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB}
    extra_hosts:
      - "host.docker.internal:host-gateway"

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  backup:
    build:
      context: ./docker/backup
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
    volumes:
      - backups:/backups
    command: >
      sh -c "while true; do
        /usr/local/bin/backup.sh
        sleep 86400
      done"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  backups:
